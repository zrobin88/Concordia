{"version":3,"sources":["components/SearchResults.js","components/SearchBtn.js","components/Instructions.js","components/SearchBar.js","components/Header.js","components/App.js","index.js"],"names":["lfmKey","SearchBtn","Component","props","react_default","a","createElement","className","onClick","style","border-radius","margin-right","type","class","EventsBtn","process","SearchBar","TM_KEY","state","value","searchResult","artistBio","artistName","artistImg","topTracks","tableCity","tableCountry","tableDate","tableVenue","upcomingEvents","city","venueName","date","artistSearch","searchValue","_this","axios","get","concat","then","res","console","log","data","artistInfo","artist","bio","summary","image","bandName","name","setState","topTracksSearch","trackArr","i","trackResults","toptracks","track","push","eventsSearch","cityArr","venueArr","dateArr","eventInfoResponse","_embedded","events","cityName","venues","ven","eventDate","dates","start","localDate","prevState","Object","assign","handleChange","e","target","handleSubmit","preventDefault","handleSubmitTT","handleSubmitES","this","_this$state","onSubmit","id","width","justifyContent","placeholder","onChange","src","components_SearchBtn","Instructions","map","key","scope","keys","Header","App","components_Header","components_SearchBar","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.20f7abd5.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './style.css'\nimport axios from 'axios'\n\nconst lfmKey = \"e193748e40aa0cc6cfb11593cff93a81\"\nclass TopTrackSearch extends Component {\n    state={\n        value:''\n    }\n    topTracksSearch=()=>{\n        const searchValue = this.state.value\n        axios.get(`https://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${searchValue}&api_key=${lfmKey}&format=json`).then(res => {\n           console.log(res.data)\n        })\n    }\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value\n        })\n    }\n    \n\n\n\n\n}\n\nexport default TopTrackSearch","import React, { Component } from 'react'\nimport './style.css'\n\nconst SearchBtn =(props)=>{\n    return(\n        <button className=\"btn-success btn-large\" onClick={props.onClick}style={{ 'border-radius': '5px', 'margin-right': '2px' }} type=\"submit\"><i class=\"fa fa-search\">Top Tracks</i></button>\n    )\n}\n\nexport default SearchBtn","import React, { Component } from 'react'\nimport './style.css'\n\nconst EventsBtn =(props)=>{\n    return(\n        <button className=\"btn-success btn-large\" onClick={props.onClick}style={{ 'border-radius': '5px', 'margin-right': '2px' }} type=\"submit\"><i class=\"fa fa-search\">Events</i></button>\n    )\n}\n\nexport default EventsBtn","import React, { Component } from \"react\";\nimport axios from 'axios';\nimport SearchResults from './SearchResults'\nimport './style.css';\nimport TopTracksDump from './TopTracksDump'\nimport SearchBtn from './SearchBtn'\nimport EventsBtn from './Instructions'\n\n// const API_KEY = process.env.REACT_APP_API_KEY; \nconst lfmKey = process.env.REACT_APP_LAST_FM_KEY\nconst eventKey = process.env.TM_KEY;\n\nclass SearchBar extends Component {\n    state = {\n        value: '',\n        searchResult: [],\n        artistBio: 'Search For Any Music Artist',\n        artistName: '',\n        artistImg: '',\n        topTracks: [],\n        tableCity: '' ,\n        tableCountry: '' ,\n        tableDate: '' ,\n        tableVenue: '' ,\n        upcomingEvents: {\n            city: '' ,\n            state: '' ,\n            venueName: '' ,\n            date: ''\n        }\n\n    }\n\n    artistSearch = () => {\n        const searchValue = this.state.value\n        axios.get(`https://ws.audioscrobbler.com//2.0/?method=artist.getinfo&artist=${searchValue}&api_key=${lfmKey}&format=json`).then(res => {\n            console.log('ARTIST DATA HERE', res.data);\n            const artistInfo = res.data.artist.bio.summary\n            const artistImg = res.data.artist.image[2][\"#text\"]\n            const bandName = res.data.artist.name\n            // console.log(artistInfo, artistImg, bandName)\n            this.setState({\n                artistBio: artistInfo,\n                artistName: bandName,\n                artistImg: artistImg\n            })\n\n        })\n\n    }\n\n    topTracksSearch = () => {\n        const searchValue = this.state.value\n        let trackArr = []\n        axios.get(`https://ws.audioscrobbler.com/2.0/?method=artist.gettoptracks&artist=${searchValue}&api_key=${lfmKey}&format=json`).then(res => {\n            for (let i = 0; i < 10; i++) {\n                let trackResults = res.data.toptracks.track[i].name\n                trackArr.push(trackResults)\n                this.setState({ topTracks: trackArr })\n\n            }\n        })\n    }\n\n    eventsSearch = () => {\n        const searchValue = this.state.value\n        const cityArr = []\n        let venueArr = []\n        let dateArr =[]\n        axios.get(`https://app.ticketmaster.com/discovery/v2/events.json?apikey=7elxdku9GGG5k8j0Xm8KWdANDgecHMV0&keyword=${searchValue}`).then(res => {\n\n            //destructuring\n            // let { _embedded: { events, images, dates, venues } } = eventInfoResponse;\n\n            for (let i = 0; i < 6; i++) {\n                let eventInfoResponse = res.data._embedded.events[i];\n                console.log('TICKETMASTER',eventInfoResponse)\n                let cityName = eventInfoResponse._embedded.venues[0].city.name\n                let ven = eventInfoResponse._embedded.venues[0].name\n                let eventDate = eventInfoResponse.dates.start.localDate\n                console.log(cityName)\n                cityArr.push(cityName)\n                venueArr.push(ven)\n                dateArr.push(eventDate)\n                this.setState(prevState => {\n                    let upcomingEvents = Object.assign({}, prevState.upcomingEvents);  // creating copy of state variable \n                    upcomingEvents.city = cityArr;\n                    upcomingEvents.venueName = venueArr;\n                    upcomingEvents.date = dateArr\n                    return { upcomingEvents };                                 // return new object \n                })\n                this.setState({tableCity: 'City', tableCountry: 'Country', tableDate: 'Date', tableVenue: 'Venue'})\n\n\n                // console.log(events[i]._embedded.venues[0].country.countryCode)\n                // console.log(events[i]._embedded.venues[0].name)\n                // console.log(events[i].dates.start.localDate)\n                //   console.log(moment(events[i].dates.start.localTime, \"HH:mm:ss\").format(\"h:mm A\"))\n\n            }\n        })\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            value: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.artistSearch()\n\n    }\n    handleSubmitTT = (e) => {\n        e.preventDefault()\n        this.setState({tableCity: '', tableCountry: '', tableDate: '', tableVenue: ''})\n        this.topTracksSearch()\n\n    }\n    handleSubmitES = (e) => {\n        e.preventDefault()\n        this.setState({ toptracks: '' })\n        this.eventsSearch()\n    }\n\n\n    render() {\n        console.log(this.state)\n        const { artistBio, artistImg, artistName, topTracks, upcomingEvents, tableCity, tableCountry, tableDate, tableVenue } = this.state;\n        console.log(\"IMAGE\", artistImg)\n        \n        return (\n            <div className='container main-container'>\n                <div>\n                    <form onSubmit={this.handleSubmit} className=\"search-container\">\n                        <input\n                            class=\"field-container text-dark\"\n                            type='text'\n                            id='search-bar'\n                            style={{ 'border-radius': '5px', width: '30%', justifyContent: 'center' }}\n                            value={this.state.value}\n                            placeholder=\"Search Musical Artists...\"\n                            onChange={this.handleChange} />\n\n                        <button className=\"btn-success btn-large\" style={{ 'border-radius': '5px', 'margin-right': '2px' }} type=\"submit\">Search<i class=\"fa fa-search\"></i></button>\n                    </form>\n\n                </div>\n                <div className=\"jumbotron jumbotron-fluid bg-white\" style={{ 'border-radius': '15px' }}>\n                    <div className=\"container\">\n                        <div className='row'>\n                            <div className='col-md-4'>\n                                <img src={artistImg} />\n                            </div>\n                            <div className='col-md-8'>\n                                <h1 className=\"display-4 kanit\">{artistName}</h1>\n                                <p className=\"lead kanit\">{artistBio}</p>\n                                <SearchBtn onClick={this.handleSubmitTT} />\n                                <EventsBtn onClick={this.handleSubmitES} />\n                                <div className='row'>\n                                    {/* <p>{topTracks}</p> */}\n                                    <ul className='kanit ttList'>\n                                        {topTracks.map(function (trackArr, i) {\n                                            console.log('test');\n                                            return <li key={i}>{trackArr}</li>\n                                        })}\n                                    </ul>\n                                </div>\n                                <div className='row'>\n\n                                    <table className=\"table table-striped results mt-5\" placeholder=\"Results\" id=\"resTable\">\n\n                                        <thead>\n                                            <tr>\n                                                <th scope=\"col\">{tableCity}</th>\n                                                <th scope=\"col\">{tableCountry}</th>\n                                                <th scope=\"col\">{tableVenue}</th>\n                                                <th scope=\"col\">{tableDate}</th>\n                                             \n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                         {Object.keys(upcomingEvents).map(i => {\n                                                    return <td key={i}>{upcomingEvents[i]}</td>\n                                                })}\n                                        </tbody>\n                                        </table>\n                                            {/* <ul className='kanit ttList'>\n                                                {Object.keys(this.state.upcomingEvents).map(i => {\n                                                    return <p key={i}>{this.state.upcomingEvents[i]}</p>\n                                                })}\n                                            </ul> */}\n                                </div>\n                            </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    )\n                }\n            }\n            \nexport default SearchBar","import React from 'react';\nimport SearchBar from './SearchBar'\n\nconst Header = () => {\n    return (\n        <div className=\"jumbotron text-light jumbotron-fluid header\">\n            <div className=\"container\">\n                <h1 className=\"display-4 kanit\">Concordia Music</h1>\n               \n                <p className=\"lead\"></p>\n         \n            </div>\n           \n        </div>\n        \n    )\n}\n\nexport default Header; ","import React, {Component} from 'react';\nimport SearchBar from './SearchBar';\nimport './style.css';\nimport Header from './Header'\n\n\nclass App extends Component {\n\n\n\n    render() {\n      return (\n      <div>\n      <Header />\n      <SearchBar />\n\n      </div>\n      );\n    }\n  }\n  \n\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n"],"sourceRoot":""}